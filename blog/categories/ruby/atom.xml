<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | Philippos Blue Book]]></title>
  <link href="http://philippos2.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://philippos2.github.io/"/>
  <updated>2014-04-13T11:51:34+09:00</updated>
  <id>http://philippos2.github.io/</id>
  <author>
    <name><![CDATA[Philippos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA['Module#prepend'-ruby-spec-memo]]></title>
    <link href="http://philippos2.github.io/blog/2013/07/31/module%23prepend-ruby-spec-memo/"/>
    <updated>2013-07-31T22:28:00+09:00</updated>
    <id>http://philippos2.github.io/blog/2013/07/31/module#prepend-ruby-spec-memo</id>
    <content type="html"><![CDATA[<h3>ruby2.0仕様メモ「Module#prepend」</h3>

<p>ruby2.0より、mix-inした場合、module にて class 側の関数をオーバライドすることができる Module#prepend キーワードが実装された。</p>

<p>```
module Fuga
  def abc=(value)</p>

<pre><code>raise ArgumentError unless value
@abc = value
</code></pre>

<p>  end
end</p>

<p>class Hoge
  prepend Fuga
  attr_accessor :abc
end</p>

<blockquote><p>hoge = Hoge.new
=> #&lt;Hoge:0x0000000354b9d0>
hoge.abc
=> nil
hoge.abc = 123
=> 123
hoge.abc = nil
ArgumentError: ArgumentError
```</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby2.0.0 / rails4.0.0 introduction]]></title>
    <link href="http://philippos2.github.io/blog/2013/07/20/ruby2-dot-0-0-slash-rails4-dot-0-0-introduction/"/>
    <updated>2013-07-20T15:45:00+09:00</updated>
    <id>http://philippos2.github.io/blog/2013/07/20/ruby2-dot-0-0-slash-rails4-dot-0-0-introduction</id>
    <content type="html"><![CDATA[<h3>【ruby2.0およびROR4.0導入メモ】2013/05/13～</h3>

<hr />

<h4>■対象環境</h4>

<p>OS：Debian 6.0 / 64bit版</p>

<hr />

<h4>■ruby2.0導入</h4>

<p>RVMのバージョンが若干古いので更新する</p>

<p><code>
$ rvm get head
</code></p>

<p>RVMで導入可能なrubyバージョン一覧（安定版のみ指定）を更新する
また以下を行うことでRVM自体のバージョンも自動的に更新される
（1.10.3→1.20.5 実行日2013/05/14 / 1.21.12 (stable) 2013/07/18）</p>

<p><code>
$ rvm get stable
</code></p>

<p>RVMにて導入可能なruby処理系を検索し、ruby2.0が導入可能であることを確認する</p>

<p><code>
$ rvm list known
</code></p>

<p>RVMにruby1.9.3の以下のビルドバージョンを導入するように要請されるので導入</p>

<p><code>
$ rvm install ruby-1.9.3-p392
</code></p>

<p>上記 &lsquo;rvm get stable&rsquo; を実行した時点でrubyの規定バージョンが初期化されるので改めて規定バージョンを設定する
なお同様にgemsetの設定も初期化される模様</p>

<p><code>
$ rvm use 1.9.3 --default
</code></p>

<p>ruby2.0を導入する</p>

<p><code>
$ rvm install 2.0.0
</code></p>

<p>ruby2.0へ切り替え</p>

<p><code>
$ rvm use 2.0.0
</code></p>

<p>rubyのバージョンを確認</p>

<p>```
$ ruby -v</p>

<p>ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-linux]
```</p>

<hr />

<h4>■.rvmrcから.ruby-versionへの移行</h4>

<p><code>
$ rvm rvmrc to ruby-version
</code></p>

<hr />

<h4>■rails4用gemset作成</h4>

<p><code>
$ rvm gemset create rails400
</code></p>

<p>現在のgemsetを確認</p>

<p>```
$ rvm gemset list</p>

<p>gemsets for ruby-2.0.0-p247 (found in /home/philippos/.rvm/gems/ruby-2.0.0-p247)
   (default)
   global
=> rails400
```</p>

<hr />

<h4>■ROR4.0導入</h4>

<p>```
$ gem install rails &mdash;version 4.0.0</p>

<p>$ rvm use 2.0.0@rails400
```</p>

<h4>■不要なバージョンのRubyを削除（2013/12/25）</h4>

<p>```
$ rvm list</p>

<p>rvm rubies</p>

<p>   ruby-1.9.3-p125 [ x86_64 ]
   ruby-1.9.3-p429 [ x86_64 ]
   ruby-2.0.0-p195 [ x86_64 ]
=> ruby-2.0.0-p247 [ x86_64 ]</p>

<h1>Default ruby not set. Try &lsquo;rvm alias create default <ruby>&rsquo;.</h1>

<h1>=> &ndash; current</h1>

<h1>=* &ndash; current &amp;&amp; default</h1>

<h1>* &ndash; default</h1>

<p>$ rvm remove 1.9.3-p125</p>

<p>Removing /home/philippos/.rvm/src/ruby-1.9.3-p125&hellip; &ndash; using Zsh, can not show progress, be patient&hellip;
Removing /home/philippos/.rvm/rubies/ruby-1.9.3-p125&hellip; &ndash; using Zsh, can not show progress, be patient&hellip;
Removing ruby-1.9.3-p125 aliases&hellip;
Removing ruby-1.9.3-p125 wrappers&hellip;
Removing ruby-1.9.3-p125 environments&hellip;
Removing ruby-1.9.3-p125 binaries&hellip;</p>

<p>$ rvm remove 2.0.0-p195</p>

<p>Removing /home/philippos/.rvm/src/ruby-2.0.0-p195&hellip; &ndash; using Zsh, can not show progress, be patient&hellip;
Removing /home/philippos/.rvm/rubies/ruby-2.0.0-p195&hellip; &ndash; using Zsh, can not show progress, be patient&hellip;
Removing ruby-2.0.0-p195 aliases&hellip;
Removing ruby-2.0.0-p195 wrappers&hellip;
Removing ruby-2.0.0-p195 environments&hellip;
Removing ruby-2.0.0-p195 binaries&hellip;</p>

<p>$ rvm list</p>

<p>rvm rubies</p>

<p>   ruby-1.9.3-p429 [ x86_64 ]
   ruby-2.0.0-p247 [ x86_64 ]</p>

<h1>Default ruby not set. Try &lsquo;rvm alias create default <ruby>&rsquo;.</h1>

<h1>=> &ndash; current</h1>

<h1>=* &ndash; current &amp;&amp; default</h1>

<h1>* &ndash; default</h1>

<p>$ rvm use 2.0.0@rails402</p>

<p>$ ruby -v</p>

<p>ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-linux]</p>

<p>$ rails -v</p>

<p>Rails 4.0.2
```</p>

<hr />

<p>参考サイト：<br/>
<a href="http://hrst.hatenablog.jp/entry/20110616/1308229846">http://hrst.hatenablog.jp/entry/20110616/1308229846</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[startover-twitter-bootstrap]]></title>
    <link href="http://philippos2.github.io/blog/2013/07/06/startover-twitter-bootstrap/"/>
    <updated>2013-07-06T14:48:00+09:00</updated>
    <id>http://philippos2.github.io/blog/2013/07/06/startover-twitter-bootstrap</id>
    <content type="html"><![CDATA[<h3>【Twitter bootstrap 導入手順】2013/05/29～</h3>

<p>bootstrapの導入が不完全だったため、bootswatchの導入とともに改めてまとめる</p>

<hr />

<h4>■ruby及びrailsのバージョン</h4>

<p>ruby 1.9.3p429<br/>
Rails 3.2.13</p>

<hr />

<h4>■必要なGem</h4>

<p>以下のふたつのgemをGemfileに記述し、bundle installすること
<code>
gem 'less-rails'                # less
gem 'twitter-bootstrap-rails'   # twitter boostrap
</code></p>

<p>※ 以下のGemは何れにしても必要なので追記すること
<code>
gem "therubyracer"
</code></p>

<hr />

<h4>■bootstrapのインストール</h4>

<h4>1. bootstrapそのもののインストール</h4>

<p><code>
$ rails generate bootstrap:install less
</code></p>

<h4>2. 可変レイアウト設定生成</h4>

<p><code>
$ rails g bootstrap:layout application fluid
</code></p>

<h4>3. 以下のビューファイルを削除する（同様のslimファイルが既に生成されているため）</h4>

<p>app/views/layouts/application.html.erb</p>

<p>※ 以下のビューファイルも不要のため削除してよし
public/index.html</p>

<p>ルーティング設定（config/routes.rb）で他のコントローラへ誘導すること
<code>
root :to =&gt; 'pages#index'
</code></p>

<h4>4. 以下のスタイルシートファイルを削除する（bootswatchと変数が干渉するため）</h4>

<p>app/assets/stylesheets/scaffolds.css.scss</p>

<hr />

<h4>■bootswatchの導入</h4>

<p>ここまででデザインが適用されるか否かわかりやすいように某かのscaffoldを作成しておくこと</p>

<h4>1. 下記サイトより任意のデザインのvariables.less及びbootswatch.lessを取得する</h4>

<p><a href="http://bootswatch.com/">http://bootswatch.com/</a></p>

<h4>2. 以下のディレクトリを作成し、上記サイトで取得したlessファイルふたつを設置する</h4>

<p>vendor/assets/stylesheets/bootswatch/</p>

<h4>3. 以下のファイルへ上記lessファイルふたつを読み込むように宣言を追記する</h4>

<p>app/assets/stylesheets/bootstrap_and_overrides.css.less</p>

<p><code>
@import "bootswatch/variables.less";
@import "bootswatch/bootswatch.less";
</code></p>

<hr />

<h4>■ Viewテンプレートを生成</h4>

<p>例）
以下のようにしてビューbooksのbootstrapテンプレートを生成する
<code>
$ rails g bootstrap:themed books -f
</code></p>

<hr />

<p>参考サイト:</p>

<p><a href="http://qiita.com/items/260a930c5ff95aafebd1  ">http://qiita.com/items/260a930c5ff95aafebd1  </a>
<a href="http://blog.scimpr.com/2012/08/25/rails%E3%81%ABtwitter-bootstrap%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B%EF%BD%9Etwitter-bootstrap-rails/  ">http://blog.scimpr.com/2012/08/25/rails%E3%81%ABtwitter-bootstrap%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B%EF%BD%9Etwitter-bootstrap-rails/  </a>
<a href="http://inoccu.net/blog/2013/04/28/112225.html  ">http://inoccu.net/blog/2013/04/28/112225.html  </a>
<a href="http://gagapi.hatenablog.jp/entry/2013/05/17/222340  ">http://gagapi.hatenablog.jp/entry/2013/05/17/222340  </a>
<a href="http://shoheik.hatenablog.com/entry/2013/03/09/115015">http://shoheik.hatenablog.com/entry/2013/03/09/115015</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[about-sorcery]]></title>
    <link href="http://philippos2.github.io/blog/2013/07/04/about-sorcery/"/>
    <updated>2013-07-04T07:23:00+09:00</updated>
    <id>http://philippos2.github.io/blog/2013/07/04/about-sorcery</id>
    <content type="html"><![CDATA[<h3>認証用GEM Saorcery 導入手順 （2012/04/20～）</h3>

<p>内容については割愛</p>

<p>参考サイト：<br/>
<a href="http://selfkleptomaniac.org/archives/2068">http://selfkleptomaniac.org/archives/2068</a> <br/>
<a href="http://blog.twiwt.org/e/63070f">http://blog.twiwt.org/e/63070f</a> <br/>
<a href="http://railscasts.com/episodes/283-authentication-with-sorcery">http://railscasts.com/episodes/283-authentication-with-sorcery</a> <br/>
<a href="http://railscasts.com/episodes/283-authentication-with-sorcery?language=ja&amp;view=asciicast">http://railscasts.com/episodes/283-authentication-with-sorcery?language=ja&amp;view=asciicast</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[about-cancan]]></title>
    <link href="http://philippos2.github.io/blog/2013/07/04/about-cancan/"/>
    <updated>2013-07-04T07:10:00+09:00</updated>
    <id>http://philippos2.github.io/blog/2013/07/04/about-cancan</id>
    <content type="html"><![CDATA[<h4>認証用GEM cancan 導入手順 （2012/04/20～）</h4>

<h4>1. Gemfileに以下を追加しbundle installする</h4>

<p><code>
gem 'cancan'
</code></p>

<h4>2. Abilityクラスの生成を行う</h4>

<p><code>
$ rails g cancan:ability
</code></p>

<h4>3. User（ここでは管理者）モデルへroleカラムを追加する</h4>

<p><code>
$ rails g migration AddRoleToUser role:string
</code></p>

<h4>4. app/models/users.rbにroleの記述を追加</h4>

<p>例）
<code>
(省略)
attr_accessible :role
ROLES = %w[admin member]
(省略)
</code></p>

<h4>5. app/models/ability.rbの関数initializeを編集（ここで権限内容を制御する）</h4>

<p>例）
```
(省略)
def initialize(user)
  user ||= User.new # guest user (not logged in)
  if user.role == &ldquo;admin&rdquo;</p>

<pre><code>can :manage, :all
</code></pre>

<p>  else</p>

<pre><code>can :read, :all
</code></pre>

<p>  end
end
(省略)
```</p>

<h4>6. 管理者権限スコープ（role）の編集（管理者追加／編集時）</h4>

<p>画面にセレクタコントロールを追加する</p>

<p>app/views/devise/registrations/new.html.rbと <br/>
app/views/devise/registrations/edit.html.rbに以下を追加</p>

<p><code>
(省略)
&lt;%= f.label :role %&gt;
&lt;%= f.collection_select :role, User::ROLES, :to_s, :humanize%&gt;
(省略)
</code></p>

<h4>7. app/views/hoges/index.html.erbを編集（ここではadminだけにEditを表示させる）</h4>

<p>&lsquo;Admin'でのユーザ登録者のみが「Edit」できるようにする<br/>
その他のユーザは「Edit」できない</p>

<p><code>
&lt;% if can? :manage, hoge %&gt;
&lt;%= link_to 'Edit', edit_hoge_path(hoge) %&gt;
&lt;% end %&gt;
</code></p>

<h4>8. 管理者権限による制限を付与するコントローラに以下のフィルタを追加する</h4>

<p><code>
class TaskController &lt; ApplicationController
  （略）
  load_and_authorize_resource
  （略）
end
</code></p>

<p>参考サイト：<br/>
<a href="http://d.hatena.ne.jp/dimros/20110326/1301145073  ">http://d.hatena.ne.jp/dimros/20110326/1301145073  </a>
<a href="http://blog.livedoor.jp/nizoraul/archives/3711303.html  ">http://blog.livedoor.jp/nizoraul/archives/3711303.html  </a>
<a href="http://yorunocafe.blogspot.jp/2011/08/rails-cancan.html">http://yorunocafe.blogspot.jp/2011/08/rails-cancan.html</a></p>
]]></content>
  </entry>
  
</feed>
